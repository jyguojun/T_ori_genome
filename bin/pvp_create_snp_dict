#!/usr/bin/env python

import argparse
from pvp import variant_filtering, pvp_utils
import os

parser=argparse.ArgumentParser(description="This is a parasite variant pipeline")
parser.add_argument("-q", "--fastq-reads", help="multiple fastq file paths", action="store", nargs='+', dest="reads")
parser.add_argument("-o", "--output-directory", help="Path to the output directory. A directory will be created if one does not exist", action="store", dest="output_dir")

args=parser.parse_args()

out = os.path.abspath(args.output_dir)
aligners = ["bwa", "ngm"]
reads = [ os.path.abspath(x) for x in args.reads ]
temp_directory = os.path.join(out,"temp_directory")

for aligner in aligners:
	filename = "{}.{}.{}.tsv".format("snp_info_d", aligner, "cumulative_snp_dictionary")
	if not os.path.isfile(os.path.join(out, filename)):
		print "filtering reads generated by %s" % aligner
		print "generating cumulative SNP dictionary."
		snp_info_d, snp_sample_info_d = variant_filtering.cumulative_snp_dictionary(out, reads, aligner)
		pvp_utils.save_to_csv(temp_directory, snp_info_d, "snp_info_d", "cumulative_snp_dictionary", aligner)
		pvp_utils.output_to_pickle_file(out, snp_info_d, "snp_info_d", "cumulative_snp_dictionary", aligner)
		pvp_utils.save_to_csv(temp_directory, snp_sample_info_d, "snp_sample_info_d", "cumulative_snp_dictionary", aligner)
		pvp_utils.output_to_pickle_file(out, snp_sample_info_d, "snp_sample_info_d", "cumulative_snp_dictionary", aligner)
		os.rename(os.path.join(temp_directory,filename),os.path.join(out,filename))
		filename = "{}.{}.{}.tsv".format("snp_sample_info_d", aligner, "cumulative_snp_dictionary")
		os.rename(os.path.join(temp_directory,filename),os.path.join(out, filename))